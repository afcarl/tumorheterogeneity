{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Populating the interactive namespace from numpy and matplotlib\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      ":0: FutureWarning: IPython widgets are experimental and may change in the future.\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import seaborn as sns\n",
    "%pylab inline\n",
    "from scipy import stats"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "pi = np.pi\n",
    "a = 1\n",
    "R = 300"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 3D case"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# this is what we will use to find the roots of to get the radius\n",
    "# for a specific frequency value\n",
    "r_f = lambda r, f, R, a: f - (a**2/(4*pi))*(1/r**2 - r/R**3)\n",
    "r_f_ = np.vectorize(r_f)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x1099d0c50>"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x109997048>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "r_ = np.linspace(0.01, R)\n",
    "for f_ in np.linspace(0.0001,1, num=10):\n",
    "    plt.plot(r_, r_f_(r_, f_, R, a), label='f='+str(f_))\n",
    "plt.ylim([-0.3,1])\n",
    "plt.xlim([0,10])\n",
    "plt.legend()\n",
    "plt.title('Optimal \"guess\" of the initial value')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from scipy import optimize"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def pf_3d(f, R, a):\n",
    "    # find the root\n",
    "    r_ = optimize.root(r_f, 1, args=(f, R, a)).x[0]\n",
    "    return ((8*pi**2)/a**2)*(r_**5/(1+r_**3/(2*R**3)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "sns.set_style('white')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/zaf/anaconda/envs/py34/lib/python3.4/site-packages/IPython/kernel/__main__.py:23: RuntimeWarning: invalid value encountered in log10\n"
     ]
    },
    {
     "data": {
      "image/png": "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\nFEstcQAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x109df7518>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "f = np.linspace(0.000001,0.20,num=1000)\n",
    "\n",
    "# plt.figure(figsize=(10,3.5))\n",
    "\n",
    "plt.subplot(111)\n",
    "\n",
    "pf_3d_ = np.vectorize(pf_3d)\n",
    "pdf = pf_3d_(f, R, a)\n",
    "not_nans = np.logical_not(np.isnan(np.log10(pdf)))\n",
    "plt.plot(np.log10(f)[not_nans], np.log10(pdf)[not_nans])\n",
    "# plt.plot(np.ones(50)*-3.75, np.linspace(0,18), '--')\n",
    "plt.xlabel('log10(frequency)')\n",
    "plt.ylabel('log10(p(f))')\n",
    "# plt.ylim([0,8])\n",
    "sns.despine()\n",
    "\n",
    "lt3 = np.logspace(-10,-3.75)\n",
    "p_lt3 = pf_3d_(lt3, R, a)\n",
    "lt3_results = stats.linregress(np.log10(lt3), np.log10(p_lt3))\n",
    "\n",
    "gt3 = np.logspace(-3.75,0.0000000001)\n",
    "p_gt3 = pf_3d_(gt3, R, a)\n",
    "gt3_results = stats.linregress(np.log10(gt3)[:-9], np.log10(p_gt3)[:-9])\n",
    "\n",
    "plt.text(-5,10.5, 'slope = '+str(np.around(lt3_results.slope, 2)))\n",
    "plt.text(-3,8.5, 'slope = '+str(np.around(gt3_results.slope, 2)))\n",
    "\n",
    "plt.ylim(ymin=0)\n",
    "plt.title('3D Spherical Tumor Growth')\n",
    "\n",
    "\n",
    "# plt.subplot(122)\n",
    "\n",
    "# # the radius as a function of frequency (solved by hand)\n",
    "# r = lambda f, R, a: (np.sqrt((pi*f*R**2)**2+a*R**2)-pi*f*R**2)/a\n",
    "\n",
    "# # the probability of observing a certain frequency\n",
    "# pf = lambda f, R, a: ((4*pi**2/a) * r(f, R, a)**3)/(1+a*r(f,R,a)**2/R**2)\n",
    "\n",
    "# # get frequencies from ≈0 to 1\n",
    "# f = np.linspace(0.0000000001,1,num=1000)\n",
    "\n",
    "# pf_ = np.vectorize(pf) # vectorize for easier evaluation\n",
    "# pdf = pf_(f, R, a)\n",
    "\n",
    "# plt.plot(np.log10(f), np.log10(pdf))\n",
    "# plt.plot(np.ones(50)*-3, np.linspace(0,8), '--')\n",
    "# plt.xlabel('log10(frequency)')\n",
    "# plt.ylabel('log10(p(f))')\n",
    "# plt.ylim([0,8])\n",
    "# sns.despine()\n",
    "# plt.title('2D Circular Tumor Growth')\n",
    "\n",
    "# lt3 = np.logspace(-10,-3)\n",
    "# p_lt3 = pf_(lt3, R, a)\n",
    "# lt3_results = stats.linregress(np.log10(lt3), np.log10(p_lt3))\n",
    "\n",
    "# gt3 = np.logspace(-3,0.0000000001)\n",
    "# p_gt3 = pf_(gt3, R, a)\n",
    "# gt3_results = stats.linregress(np.log10(gt3)[:-9], np.log10(p_gt3)[:-9])\n",
    "\n",
    "# plt.text(-8,7.5, 'slope = '+str(lt3_results.slope))\n",
    "# plt.text(-2,6.5, 'slope = '+str(gt3_results.slope))\n",
    "\n",
    "\n",
    "# sns.despine()\n",
    "\n",
    "plt.savefig('3D_growth.pdf')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.4.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
